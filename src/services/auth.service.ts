// Generated by https://quicktype.io

import axios from "axios";
import { tesloApi } from "../api/teslo.api";

export interface LoginResponse {
  id: string;
  email: string;
  fullName: string;
  isActive: boolean;
  roles: string[];
  token: string;
}

export class AuthService {
  static async login(email: string, password: string): Promise<LoginResponse> {
    try {
      const { data } = await tesloApi.post("/auth/login", { email, password });
      return data as LoginResponse;
    } catch (error) {
      if (axios.isAxiosError(error)) {
        // Verificar si el error es un error de Axios y tiene una respuesta del servidor.
        const serverMessage =
          error.response?.data?.message || "Failed to login";
        throw new Error(serverMessage);
      } else {
        // Para cualquier otro tipo de error, lanzar un mensaje gen√©rico.
        throw new Error("Failed to login");
      }
    }
  }

  static async checkStatus(): Promise<LoginResponse> {
    try {
      const { data } = await tesloApi.get<LoginResponse>("/auth/status");
      console.log(data);
      return data;
    } catch (err) {
      console.error(err);
      throw new Error("Failed to login");
    }
  }
}
